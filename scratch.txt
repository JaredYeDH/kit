await keyword ideas
---

AWAIT(expr)

    [&]{
        while(true)
            try{
                return (expr);
            }catch(const RetryTask&){
                // may throw RetryTask if yield behavior is without coros
                MX.this_strand().this_unit().yield();
            }
    }()


// 

AWAIT_HINT(hint, expr)

    [&]{
        while(true)
            bool once = false;
            try{
                return (expr);
            }catch(const RetryTask&){
                // may throw RetryTask if yield behavior is without coros
                if(not once) {
                    MX.this_strand().this_unit().cond = [=]{
                        return (hint);
                    };
                    once = true;
                }
                MX.this_strand().this_unit().yield();
            }
    }()


// yield until you can get data from channel
auto item = AWAIT(ch->get());

// check if ch is ready before context switching
// sometimes false positives, but the second part will yield if necessary
// (more efficient)
auto item = AWAIT_HINT(ch->ready(), ch->get());

